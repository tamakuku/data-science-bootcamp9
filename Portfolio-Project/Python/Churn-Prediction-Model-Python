
Link >>> https://colab.research.google.com/drive/1K4eVfD0NLN0B33awu1BsOB3eDYwlxe0T?usp=sharing

### Build Logistic Regression Model
## Using a 4-Step ML Workflow
## With churn DataFrame

# Import necessary libraries
from sklearn.linear_model import LogisticRegression  # Logistic Regression model
from sklearn.model_selection import train_test_split  # Split data into train and test sets
from sklearn.metrics import accuracy_score  # Evaluate model accuracy
import pandas as pd  # Manage DataFrame
from google.colab import drive  # Read file from Google Drive

# Connect to Google Drive
drive.mount('/content/drive')

# Read CSV file from Google Drive
df = pd.read_csv("/content/drive/MyDrive/Data Rockie School/Bootcamp 9/Raw Data/churn.csv")

# Preview the DataFrame
df.head()

# Select features (X) and target (y)
X = df[["totaldayminutes", "totaldaycalls", "totaldaycharge", "numbercustomerservicecalls"]]
y = df["churn"]

# Step 01: Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.20, random_state=42
)

# Step 02: Train the model
model = LogisticRegression()  # Initialize Logistic Regression model
model.fit(X_train, y_train)  # Fit the model with training data

# Step 03: Make predictions
train_pred = model.predict(X_train)  # Predict on training data
test_pred = model.predict(X_test)  # Predict on test data

# Step 04: Evaluate the model
train_accuracy = accuracy_score(y_train, train_pred)  # Training accuracy
test_accuracy = accuracy_score(y_test, test_pred)  # Testing accuracy

# Print the accuracy metrics
print("Train Accuracy:", train_accuracy)
print("Test Accuracy:", test_accuracy)

